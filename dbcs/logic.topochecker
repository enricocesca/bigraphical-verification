// Topological Operators of SLCS:
Let interior(x) = ! (N (! x));
Let boundary(x) = (N x) & (! interior(x));
Let interiorBoundary(x) = x & (! interior(x));
Let closureBoundary(x) = (N x) & (! x);

// Operators concerning Reachability:
Let weakReachability(x, y) = ! ((! y) S (! x));
Let reachability(x, y) = x & weakReachability((x | y), y);
Let reachabilityThrough(x, y, z) = reachability(x, reachability(y, z));

// ************************************************************************************ //
//                      Spatial Logic for Directed Bigraphs (SLDB)                      //
// ************************************************************************************ //

Let outer(x) = reachability([place], x);
Let inner(x) = closureBoundary(x) & [place];

// Locality ad-hoc Operators (x = node/site):
Let parent(x) = reachability([node], outer(x));
Let siblings(x) = closureBoundary(outer(x)) & (! x);
Let children(x) = closureBoundary(inner(x));
Let neighbours(x) = parent(x) | siblings(x) | children(x);

Let tilde(x) = x | (closureBoundary(x) & [link]) | reachability([back], x);

// Connectivity ad-hoc Operators (x, y, z = node/inner/outer/edge):
Let points(x) = closureBoundary(closureBoundary(x) & [back]);
Let handles(x) = closureBoundary(closureBoundary(x) & [link]);
Let connectedThrough(x, y, z) = x & reachabilityThrough(tilde(x), tilde(y), tilde(z));

// Topochecker Output Filename:
Output "./dbcs/out-state";
